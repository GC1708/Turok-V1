local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local Camera = workspace.CurrentCamera

-- Create the UI
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "AimbotUI"
screenGui.ResetOnSpawn = false
screenGui.Parent = LocalPlayer:WaitForChild("PlayerGui")

-- ImageButton (Circular)
local aimButton = Instance.new("ImageButton")
aimButton.Name = "AimButton"
aimButton.Size = UDim2.new(0, 50, 0, 50)
aimButton.Position = UDim2.new(1, -60, 0.5, -25) -- Middle-right
aimButton.BackgroundTransparency = 1
aimButton.Image = "rbxassetid://7411011041"
aimButton.Parent = screenGui

local uiCorner = Instance.new("UICorner")
uiCorner.CornerRadius = UDim.new(1, 0)
uiCorner.Parent = aimButton

-- Target the player whose head is closest to the center of the screen
local function getTargetByCameraLook()
	local bestTarget = nil
	local smallestAngle = math.huge

	for _, player in ipairs(Players:GetPlayers()) do
		if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("Head") then
			local head = player.Character.Head
			local directionToHead = (head.Position - Camera.CFrame.Position).Unit
			local cameraLookVector = Camera.CFrame.LookVector

			-- Measure angle between camera forward and head direction
			local dot = directionToHead:Dot(cameraLookVector)
			local angle = math.acos(math.clamp(dot, -1, 1)) -- in radians

			-- Raycast to ensure it's visible
			local distance = (head.Position - Camera.CFrame.Position).Magnitude
			local rayParams = RaycastParams.new()
			rayParams.FilterType = Enum.RaycastFilterType.Blacklist
			rayParams.FilterDescendantsInstances = {LocalPlayer.Character}

			local result = workspace:Raycast(Camera.CFrame.Position, directionToHead * distance, rayParams)

			if (not result or result.Instance:IsDescendantOf(player.Character)) and angle < smallestAngle then
				smallestAngle = angle
				bestTarget = player
			end
		end
	end

	if bestTarget and bestTarget.Character then
		return bestTarget.Character:FindFirstChild("Head")
	end
	return nil
end

-- Aim function
local function aimAtHead()
	local head = getTargetByCameraLook()
	if head then
		Camera.CFrame = CFrame.lookAt(Camera.CFrame.Position, head.Position)
	end
end

-- Connect button click
aimButton.MouseButton1Click:Connect(aimAtHead)
